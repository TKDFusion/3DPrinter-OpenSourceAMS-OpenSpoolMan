name: Push released docker image

on:
  release:
    types: [published]
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:
  workflow_call:

jobs:
  #
  # run tests#
  #
  test:
    name: Run tests and linter
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      - name: Set up Python 3.10
        uses: actions/setup-python@v3
        with:
          python-version: "3.10"
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --ignore=F824 --show-source --statistics 
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    #- name: Test with pytest
    #  run: |
    #    pytest

  build-and-push:
    name: Build image & push
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    if: ${{ github.event_name != 'pull_request' }}
    needs: [test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Extract version
        run: |
          VERSION=$(python -c "exec(open('__version__.py').read()); print(__version__)")
          echo "Version is $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV
          REPO_NAME=$(echo "${{ github.repository }}" | tr '[:upper:]' '[:lower:]')
          echo "REPO_NAME=$REPO_NAME" >> $GITHUB_ENV

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Determine tags
        run: |
          if [[ "${{ github.event_name }}" == "release" ]]; then
            echo "TAGS=ghcr.io/${{ env.REPO_NAME }}:${{ env.VERSION }},ghcr.io/${{ env.REPO_NAME }}:latest" >> $GITHUB_ENV
          elif [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            echo "TAGS=ghcr.io/${{ env.REPO_NAME }}:dev" >> $GITHUB_ENV
          fi

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.TAGS }}
